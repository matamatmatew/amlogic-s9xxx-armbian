#!/bin/bash

R="$(printf '\033[1;31m')"
G="$(printf '\033[1;32m')"
Y="$(printf '\033[1;33m')"
W="$(printf '\033[1;37m')"
C="$(printf '\033[1;36m')"
D="$(printf '\e[0m')"

current="${PWD}"
astro_patch="${current}/astro"
verus_patch="${current}/verus"
xmrix_build="${current}/xmrig-build"
tnn_patch="${current}/tnn"
packs="unzip aria2 screen htop xzip git sudo nano net-tools lsb-release software-properties-common libomp5 ntp ntpdate ncdu \
cmake make autoconf automake clang bison wget curl build-essential libboost-dev dbus gzip libhwloc-dev libjansson-dev \
libuv1-dev uuid-dev libcurl4 libcurl4-openssl-dev autotools-dev openssl libssl-dev libtool zlib1g-dev"

check_root(){
	if [ "$(id -u)" -ne 0 ]; then
		echo -ne " ${R}Run this program as root!\n\n"${W}
		exit 1
	fi
}

first(){
	echo -e "${R} [${W}-${R}]${C}Set Timezone..."${D}
	timedatectl set-timezone Asia/Jakarta
	sleep 1
	timedatectl
	sleep 1
	echo -e "${R} [${W}-${R}]${C}Check Crontab file packages..."${D}
	sleep 1
	if [[ ! -f /var/spool/cron/crontabs/root ]]; then
		chown root:crontab root
		cp root /var/spool/cron/crontabs/root
	else
		rm /var/spool/cron/crontabs/*
		chown root:crontab root
		cp root /var/spool/cron/crontabs/root
	fi
	sleep 1
	echo -e "${R} [${W}-${R}]${C}Check Netplan file packages..."${D}
	sleep 1
	if [[ ! -f /etc/netplan/wifi.yaml ]]; then
		cp /root/wifi.yaml /etc/netplan/
		chmod 600 /etc/netplan/wifi.yaml
		netplan apply
	else
		rm /etc/netplan/*
		cp /root/wifi.yaml /etc/netplan/
		chmod 600 /etc/netplan/wifi.yaml
		netplan apply
	fi
	sleep 1
	echo -e "${G} Setup Swap dan Hugepages..."${D}
	sleep 1
	if [[ ! -n $(sysctl vm.vfs_cache_pressure | grep "vm.vfs_cache_pressure = 50") ]]; then
		echo 'vm.vfs_cache_pressure=50' | tee -a /etc/sysctl.conf
	else
		sed -i "/vm.vfs_cache_pressure/d" /etc/sysctl.conf
		echo 'vm.vfs_cache_pressure=50' | tee -a /etc/sysctl.conf
	fi
	if [[ ! -n $(sysctl vm.nr_hugepages | grep "vm.nr_hugepages = 248") ]]; then
		echo 'vm.nr_hugepages=248' | tee -a /etc/sysctl.conf
	else
		sed -i "/vm.nr_hugepages/d" /etc/sysctl.conf
		echo 'vm.nr_hugepages=248' | tee -a /etc/sysctl.conf
	fi
	
	if [[ ! -n $(sysctl vm.swappiness | grep "vm.swappiness = 100") ]]; then
		echo 'vm.swappiness = 10' | tee -a /etc/sysctl.conf
	else
		sed -i "/vm.swappiness/d" /etc/sysctl.conf
		echo 'vm.swappiness = 10' | tee -a /etc/sysctl.conf
	fi
	sleep 2
}

package() {
	cd ${current}
	echo -e "${R} [${W}-${R}]${C}Update packages..."${D}
	apt-get update -y
	sleep 1
	echo -e "${R} [${W}-${R}]${C}Upgrade packages..."${D}
	apt-get upgrade -y
	sleep 1
	echo -e "${R} [${W}-${R}]${C}Installing LLVM..."${D}
	sleep 1
	if [[ ! -f /etc/apt/trusted.gpg.d/apt.llvm.org.asc ]]; then
		curl -fsSL https://apt.llvm.org/llvm.sh | bash -s all
		clear
	else
		echo -e "${R} [${W}-${R}]${C}LLVM Sudah Terpasang..."${D}
	fi
	sleep 1
	echo -e "${R} [${W}-${R}]${C}Installing packages..."${D}
	apt-get install ${packs} -y
	dpkg -i ${verus_patch}/*.deb
	sleep 1
	echo -e "${G} Try Missing Packages..."${D}
	apt-get install --fix-broken -y 
	sleep 1
	echo -e "${R} [${W}-${R}]${C}Autoremove dan Clean packages..."${D}
	apt-get autoremove --purge -y
	apt-get autoclean -y
	sleep 1
	apt-get clean
	echo -e "${R} [${W}-${R}]${G} Done..."${D}
	sleep 2
	clear
}

astro(){
	cd ${astro_patch}
	echo -e "${R} [${W}-${R}]${C}Check Astominer Miner..."${D}
	sleep 1
	if [[ ! -f /usr/local/bin/astrominer ]]; then
		echo -e "${R}Installing Astrominer..."${D}
		cp astrominer /usr/local/bin/astrominer
	cd ${current}
	sleep 2
}

verus(){
	cd ${verus_patch}
	echo -e "${R} [${W}-${R}]${C}Check Verus Miner..."${D}
	sleep 1
	if [[ ! -f /usr/local/bin/ccminer ]]; then
		echo -e "${R}Installing Verus..."${D}
		cp A53 /usr/local/bin/ccminer
	cd ${current}
	sleep 2
}

tnn() {
	cd ${tnn_patch}
	echo -e "${R} [${W}-${R}]${C}Check TNN Miner..."${D}
	sleep 1
	if [[ ! -f /usr/local/bin/tnn ]]; then
		echo -e "${R}Installing TNN Miner..."${D}
		cp tnn /usr/local/bin/tnn
	cd ${current}
	sleep 2
}

xmrig(){
	cd ${current}echo -e "${R} [${W}-${R}]${C}Check Xmrig Miner..."${D}
	sleep 1
	if [[ ! -f /usr/local/bin/xmrig ]]; then
		echo -e "${R} [${W}-${R}]${C}Building Xmrig Miner..."${W}
		git clone --single-branch -b dev https://github.com/xmrig/xmrig.git ${xmrix_build} 
		mkdir ${xmrix_build}/build && cd ${xmrix_build}/build
		cmake .. -DWITH_OPENCL=OFF -DWITH_CUDA=OFF -DWITH_SECURE_JIT=ON -DARM_TARGET=8
		sleep 1
		make -j$(nproc) && cp xmrig /usr/local/bin/ && ldd /usr/local/bin/xmrig
		clear
	else
		echo -e "${G}Xmrig Miner Sudah Terpasang..."${D}
	fi
	cd ${current}
	sleep 2
}

check_root
first
package
#astro
#verus
#tnn
#xmrig
